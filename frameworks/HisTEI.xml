<?xml version="1.0" encoding="UTF-8"?>
<xt:extensions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xmlns:xt="http://www.oxygenxml.com/ns/extension"
               xsi:schemaLocation="http://www.oxygenxml.com/ns/extension http://www.oxygenxml.com/ns/extension/extensions.xsd">
    <xt:extension id="HisTEI">
        <xt:location href="HisTEI-oxygen.zip"/>
        <xt:version>0.5.0</xt:version>
        <xt:oxy_version>15.2+</xt:oxy_version>
        <xt:type>framework</xt:type>
        <xt:author>Mike Olson</xt:author>
        <xt:name>HisTEI</xt:name>
        <xt:description xmlns="http://www.w3.org/1999/xhtml">
            <style type="text/css">
                .title { font-family:Verdana; font-size:large; font-weight:bold;}
                .body { font-family:Geneva; }
                .header { font-weight:bold; }
                code { font-size:large; }
                p { margin:0px; padding:5px; }
            </style>
            <p class="title">HisTEI Oxygen Framework</p>
            <div class="body">
                <p class="header">What's new?</p>
                <p class="header">Version 0.5.0</p>
                <ul>
                    <li>Added the tokenizer! You can now split your transcriptions into separate words, numbers and punctuation</li>
                    <li>To tokenize a text, </li>
                    
                    <li>
                        <ul>
                            <li>Open it in Oxygen and then click the Tokenize button on the Annotations menu or toolbar</li>
                            <li>You will then be asked to save the tokenized version somewhere (I'd recommend saving it in a separate place from the original transcription)</li>
                            <li>The new file will have a word count (extent) and a change automatically added to the TEI Header to show it's been tokenized</li>
                            <li>Each token will be surrounded by a colored box. To edit attributes for each token, click the Styles toolbar and select the Annotations style.
                                When you click inside a token, the attributes to edit will appear after it</li>
                            <li>The tokenizer also removes extra spaces from the document as well as cleaning up markup that isn't conducive to tokenization</li>
                            <li>The tokenizer is still new and fairly untested, so any feedback is welcome!</li>
                        </ul>
                    </li>
                    
                    <li>
                        <p>Words</p>
                        <p>Compounds or those words containing non-breaking punctuation are kept as a whole word with any internal punctuation marked up with the break attribute set to no.
                            This also applies to words that end in non-breaking punctuation next to a break. Non-breaking punctuation consists of dashes and underscores as well as &apos; and =
                        </p>
                    </li>
                    <li><p>Numbers</p>
                        <p>Numbers are split out of the text using only digits interspersed with possible number breaks for historical texts. Right now they are :.-/%&quot;&apos;
                            This means that no roman numerals are recognized - those should be hand tagged beforehand. 
                            If the number can be recognized, it's type is also set (i.e. cardinal, ordinal, fraction, percentage)
                            Currency symbols are marked up as punctuation - this is because most currency information is not contained in symbols in historical texts.
                        </p>
                    </li>
                    <li>
                        <p>Punctuation</p>
                        <p>All other punctuation and any non-breaking punctuation not adjacent to a word are marked up as regular punctuation.</p>
                    </li>
                    
                    <li>Added new hooks for a custom editor variable: if you set a Custom Editor Variable (in the Options menu) named userID (case-sensitive) to your initials, 
                        whenever you add a change to a document in revisionDesc or tokenize a document, your userID will be used in the change element. 
                        This must match an xml:id for a person in your person file, but stored in a new list called Editors (i.e. you and other editors on your project)</li>
                    <li>Finally, added functions for handling unique IDs to the framework menu. You can generate IDs on elements selected in the editor and/or change the way IDs are generated. 
                        I don't recommend changing these settings unles you know what you're doing!</li>
                </ul>
                <p class="header">Version 0.4.5</p>
                <ul>
                    <li>Several new tags have been added (with buttons too!)</li>
                    <li>title: you can now mark stretches of text as representing the Title of a something, e.g. a book or play. 
                    You can save a link to the book by using the ref attribute (e.g. Google Books)</li>
                    <li>Revision Description and Changes</li>
                    <li>You can now store information about the status of your transcriptions within the revisionDesc element in the TEI Header.
                    Each change made to the document is recorded in a change element with the status of the document, the date and time as well as the person who made the change</li>
                    <li>To take advantage of the person who made changes, you need to add a new list of people in your Person contextual_info file with a type of &apos;editor&apos;</li>
                    <li>Use the button on the toolbar or in the menu to insert a change (can be done from anywhere in the document)</li>
                    <li>If you created a transcript from an older template and don't have a revisionDesc, use this button to insert one into the TEI Header</li>
                    <li>New Annotations</li>
                    <li>num: you can now mark up numbers that occur within the text. 
                        In the Annotations view (under Styles) you can also save metadata about what the actual number is</li>
                    <li>measure: you can now mark up amounts of things, e.g. $20.00. Here too you can save metadata about what sort of measure it is</li>
                    <li>Addresses</li>
                    <li>You can now insert addresses either as a separate div or within the opener or closer or even within the text itself. By default
                    each new Address comes with an address line, street and city</li>
                    <li>In addition, all sub-elements of an address can now be added from the Addresses menu/toolbar in the Contextual Info menu/toolbar</li>
                    <li>You can also insert a div to hold information about any stamps found on a letter</li>
                    <li>Contextual Info</li>
                    <li>You can now normalize all Contextual Info elements within the text - when placing the cursor inside one of these elements, a dropdown
                    box appears with the list of normalized entities from the Contextual Info files</li>
                    <li>The place file has been updated, so you can select other place types within each kind of place (e.g. for Settlements, you can now select
                    a Region and Country rather than typing it again. This helps with normalization within places</li>
                    <li>There's more, but it's too much to type here! :-)</li>
                </ul>
                <p class="header">Version 0.4.3</p>
                <ul>
                    <li>
                        <p>
                            After a higher-than-average "duh!" factor, I finally figured out that we can have <b>both</b> manual line breaks (i.e. TEI <code>lb</code> elements)
                            <b>as well as text wrapping at the same time</b>. Now, by default, new lines are created for manual line breaks as well as when the text
                            stretches past the edge of the Oxygen window.
                        </p>
                        <p>
                            This means, of course, if the Oxygen window is too narrow, a text with line breaks will still wrap.
                            So, I added a new command to allow toggling text wrapping <b>ON</b> and <b>OFF</b> completely.
                        </p>
                        <p>
                            You can find this command on the <i>Formats</i> menu with the label <i>Toggle Text Wrap</i>.
                            I also added a button to the Formats toolbar: it's a capital <i>A</i> with
                            a blue arrow pointing backwards (to represent wrapping the text to a new line).
                        </p>
                        <p>
                            By default, text wrapping is <b>ON</b>. Click the button once to turn it <b>OFF</b>.
                            At that point, only manual line breaks within the text will be used to wrap to a new line.
                            Click it again to turn it back <b>ON</b>.
                        </p>
                        <p>
                            Additionally, since text wrapping is <b>ON</b> by default now, it is more difficult to see clearly where manual line breaks are, so
                            I added an icon (an arrow pointing down and back) that is displayed inline within the text to represent manual line breaks.
                            Please let me know what you think of this!
                        </p>
                        <p>
                            Finally, I removed the old way of wrapping text (namely with another CSS stylesheet which used to be accessed via the
                            <i>Styles</i> toolbar)
                        </p>
                    </li>
                    <li>
                        I also added many new styles for elements in the TEI Header (mainly in the <code>titleStmt</code> and <code>encodingDesc</code> elements). 
                        It's now much closer to handling all possible fields in these elements.
                    </li>
                    <li>
                        Type dropdowns are also now available for <code>head</code> and <code>title</code> elements in order to distinguish between 
                        main and sub headings and titles
                    </li>
                    <li>
                        TIFF Images now supported: When setting a new base directory for the <code>facsimile</code> element, 
                        TIFF image files are recognized and added to the list of graphics
                    </li>
                </ul>
                <p class="header">Version 0.4.2</p>
                <ul>
                    <li>
                        Added links to the end of glosses, so you can get back to the spot in the text that they refer to!
                    </li>
                </ul>
                <p class="header">Version 0.4.1</p>
                <ul>
                    <li>
                        Added new CSS to render texts with no line breaks using normal text flow. This is handy for digitized published works
                        in which the physical line breaks are unimportant. To switch between the two modes, select the Styles button/dropdown
                        and then pick the <i>Document Wrap Text</i> option. Brought to you buy the burgeoning HisTEI user community :-)
                    </li>
                    <li>If you have features to request, feel free to submit them on the GitHub website <a href="https://github.com/odaata/HisTEI">https://github.com/odaata/HisTEI</a></li>
                    <li>Oh and a couple o' bugs were squashed along the way</li>
                </ul>
                <p class="header">Version 0.4.0</p>
                <ul>
                    <li>First release for HisTEI on GitHub including a new HisTEI default framework</li>
                    <li>The Java classes now reside in a new package: info.histei</li>
                    <li>All classes with <code>EMST</code> prefix in the name have been changed to the prefix <code>HT</code></li>
                </ul>
            </div>
        </xt:description>
        <xt:license><![CDATA[END USER LICENSE AGREEMENT

The MIT License (MIT)

Copyright (c) 2014 Mike Olson

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.]]></xt:license>
    </xt:extension>

</xt:extensions>
