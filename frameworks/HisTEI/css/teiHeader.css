/*-----------------------------------------------------------------------------------------------
----- HisTEI framework customizations for Oxygen 
-----   TEI Header for a Document
-------------------------------------------------------------------------------------------------*/

/* Bibliographic References used in sourceDesc when transcribing published work */
@import "bibl.css";

@namespace xml url('http://www.w3.org/XML/1998/namespace');

/* Foldable Sections */
titleStmt,
editionStmt,
publicationStmt,
notesStmt,
sourceDesc,
encodingDesc,
editorialDecl,
msDesc,
msContents,
profileDesc,
revisionDesc,
correspDesc,
correspAction,
creation,
textClass,
handNotes {
    display:block;
    -oxy-foldable:true;
}

/* Collapsed Sections by Default */
publicationStmt,
notesStmt,
sourceDesc,
encodingDesc,
editorialDecl,
profileDesc,
revisionDesc,
correspDesc,
creation,
textClass,
handNotes {
    -oxy-folded:true;
}

/* Section labels */
titleStmt:before,
editionStmt:before,
publicationStmt:before,
notesStmt:before,
sourceDesc:before,
encodingDesc:before,
editorialDecl:before,
msDesc:before,
msContents:before,
profileDesc:before,
revisionDesc:before,
correspDesc:before,
correspAction:before,
creation:before,
textClass:before,
handNotes:before {
    display:block;
    color:white;
    background-color:gray;
    font-weight:bold;
    width:100%;
    margin:5px;
    content: oxy_concat("${i18n(", oxy_name(), ".label)}");
}

msDesc:before {
    background-color:rgba(53, 25, 0, 0.6);    
}

/* Fields */
fileDesc,
titleStmt,
extent,
note,
msIdentifier,
repository,
collection,
idno,
altIdentifier,
catRef,
projectDesc,
samplingDecl,
correction,
normalization,
quotation,
hyphenation,
segmentation,
stdVals,
interpretation,
punctuation,
change {
    display:block;
}


/* Field labels */
extent:before,
note:before,
repository:before,
collection:before,
catRef:before,
projectDesc:before,
samplingDecl:before,
correction:before,
normalization:before,
quotation:before,
hyphenation:before,
segmentation:before,
stdVals:before,
interpretation:before,
punctuation:before,
change:before {
    content: 
        oxy_label(
            text, oxy_concat("${i18n(", oxy_name(), ".label)}:")
            styles, "@import 'labels.css';"
        )
    ;
}

/* Special labels for the notes with specific functions
    these are all essentially custom fields for the Amsterdam project */
teiHeader note[type]:before {
    content: oxy_concat("${i18n(note.label.", attr(type, string, ""), ")}:");
}

repository:before {
    -oxy-prepend-content:
        url('../images/repository-16.png')
}

collection:before {
    -oxy-prepend-content:
        url('../images/collection-16.png')
}

/* Collapse text for all reference elements 
    (so that only the combobox will edit the field) */
repository,
catRef,
correspAction > date,
correspAction > persName,
correspAction > orgName,
correspAction > placeName,
correspAction > district,
correspAction > settlement,
correspAction > region,
correspAction > country,
correspAction > bloc,
creation > date,
creation > persName,
creation > orgName,
creation > placeName,
creation > district,
creation > settlement,
creation > region,
creation > country,
creation > bloc {
    display:block;
    vertical-align:middle;
    padding:5px 0px;
    visibility:-oxy-collapse-text;
}

/* Reference fields that use the HisTEI contextual editor */
repository {
    content: 
        oxy_editor(
            rendererClassName, "info.histei.contextual_info.ContextualEditor",
            swingEditorClassName, "info.histei.contextual_info.ContextualEditor",
            edit, "@ref"
            fontInherit, true
            contextual_type, "org"
            contextual_filter, "repository"
        )
    ;
}

correspAction > persName,
creation > persName {
    content:
        oxy_editor(
            rendererClassName, "info.histei.contextual_info.ContextualEditor",
            swingEditorClassName, "info.histei.contextual_info.ContextualEditor",
            edit, "@ref"
            fontInherit, true
            contextual_type, "psn"
        )
    ;
}

correspAction > orgName,
creation > orgName {
    content:
        oxy_editor(
            rendererClassName, "info.histei.contextual_info.ContextualEditor",
            swingEditorClassName, "info.histei.contextual_info.ContextualEditor",
            edit, "@ref"
            fontInherit, true
            contextual_type, "org"
        )
    ;
}

correspAction > placeName,
creation > placeName {
    content:
        oxy_editor(
            rendererClassName, "info.histei.contextual_info.ContextualEditor",
            swingEditorClassName, "info.histei.contextual_info.ContextualEditor",
            edit, "@ref"
            fontInherit, true
            contextual_type, "plc"
        )
    ;
}


correspAction > district,
correspAction > settlement,
correspAction > region,
correspAction > country,
correspAction > bloc,
creation > district,
creation > settlement,
creation > region,
creation > country,
creation > bloc {
    content: 
        oxy_editor(
            rendererClassName, "info.histei.contextual_info.ContextualEditor",
            swingEditorClassName, "info.histei.contextual_info.ContextualEditor",
            edit, "@ref"
            fontInherit, true
            contextual_type, "plc"
            contextual_filter, oxy_name()
        )
    ;
}

/* Genres */
catRef:before {
    -oxy-append-content:
        oxy_label(
            text, "${i18n(scheme.label)}: "
            styles, "@import 'labels_sub.css';"            
        )
        oxy_editor(
            rendererClassName, "info.histei.contextual_info.ContextualEditor",
            swingEditorClassName, "info.histei.contextual_info.ContextualEditor",
            edit, "@scheme"
            fontInherit, true
            contextual_type, "gen"
            contextual_filter, "scheme"
        )
    ;
}

catRef {
    content: 
        oxy_editor(
            rendererClassName, "info.histei.contextual_info.ContextualEditor",
            swingEditorClassName, "info.histei.contextual_info.ContextualEditor",
            edit, "@target"
            fontInherit, true
            contextual_type, "gen"
            contextual_filter, "EMST_GENRES"
        )
    ;
}

catRef[scheme] {
    content: 
        oxy_editor(
            rendererClassName, "info.histei.contextual_info.ContextualEditor",
            swingEditorClassName, "info.histei.contextual_info.ContextualEditor",
            edit, "@target"
            fontInherit, true
            contextual_type, "gen"
            contextual_filter, oxy_replace(attr(scheme, string, ""), "gen:", "")
        )
    ;
}

/* Field Labels not automatically retrievable */
publicationStmt > idno:before {
    content: 
        oxy_label(
            text, "${i18n(idno.label.internal)}:"
            styles, "@import 'labels.css';"
        )
    ;
}

msIdentifier > idno:before {
    content: 
        oxy_label(
            text, "${i18n(idno.label.archive)}:"
            width, 100px
            styles, "@import 'labels.css';"
        )
    ;
}

altIdentifier > idno:before {
    content: 
        oxy_label(
            text, "${i18n(idno.label.alternative)}:"
            width, 110px
            styles, "@import 'labels.css';"
        )
    ;
}

/* Special fields */
collection[type]:before {
    content:
        oxy_label(
            text, oxy_concat("${i18n(note.label.", attr(type, string ""), ")}:")
            width, 110px
            styles, "@import 'labels.css';"
        )
        oxy_label(
            text, oxy_concat("${i18n(ref.label)}: ")
            styles, "@import 'labels_sub.css';"
        )
        oxy_textfield(
            edit, "@ref"
            columns, 14
        )
        "  "
    ;
}

/* correspAction */
correspAction:before {
    padding: 0px;
    vertical-align: middle;
    -oxy-append-content:
        oxy_label(
            text, oxy_concat("${i18n(type.label)}: ")
            color, white,
            width, 75px,
            styles, "@import 'labels_sub.css';"
        )
        oxy_combobox(
            edit, "@type"
        )
    ;
}

correspAction > date:before,
correspAction > orgName:before,
correspAction > placeName:before,
correspAction > district:before,
correspAction > settlement:before,
correspAction > region:before,
correspAction > country:before,
correspAction > bloc:before {
    -oxy-append-content:
        oxy_label(
            text, oxy_concat("${i18n(", oxy_name(), ".label)}: ")
            styles, "@import 'labels.css';"
        )
    ;
}

correspAction > persName:before {
    -oxy-append-content:
        oxy_label(
            text, oxy_concat("${i18n(", oxy_name(), ".label)}: ")
            styles, "@import 'labels.css';"
        )
        oxy_combobox(
            edit, "@role"
            editable, true,
            columns, 10,
            values, "official,scribe,supplicant,witness"
        )
    ;
}

/* creation */
creation > date:before {
    -oxy-append-content:
        oxy_label(
            text, oxy_concat("${i18n(", oxy_name(), ".label)}: ")
            styles, "@import 'labels.css';"
        )
        oxy_combobox(
            edit, "@type"
            columns, 10
            editable, true,
            tooltips, "when the letter or other document arrived at its destination,when the text was copied,when the person involved was deposed,when the letter or other document was sent,when the text was written"
            values, "arrived,copied,deposed,sent,written"
        )
    ;
}

creation > persName:before {
    -oxy-append-content:
        oxy_label(
            text, oxy_concat("${i18n(", oxy_name(), ".label)}: ")
            styles, "@import 'labels.css';"
        )
        oxy_combobox(
            edit, "@type"
            columns, 10
            editable, true,
            tooltips, "person who wrote the text or is responsible for its contents,person the letter or other document was addressed to,person who copied the text,person who being interviewed in a deposition,person who sent the letter or other document"
            values, "author,addressee,copyist,deponent,sender"
        )
    ;
}

creation > orgName:before {
    -oxy-append-content:
        oxy_label(
            text, oxy_concat("${i18n(", oxy_name(), ".label)}: ")
            styles, "@import 'labels.css';"
        )
        oxy_combobox(
            edit, "@type"
            columns, 10
            editable, true,
            tooltips, "org for which the author wrote the text,org the letter or other document was addressed to,org for which the text was copied,org holding the deposition,org that sent the letter or other document"
            values, "author,addressee,copyist,deposition,sender"
        )
    ;
}

creation > placeName:before,
creation > district:before,
creation > settlement:before,
creation > region:before,
creation > country:before,
creation > bloc:before {
    -oxy-append-content:
        oxy_label(
            text, oxy_concat("${i18n(", oxy_name(), ".label)}: ")
            styles, "@import 'labels.css';"
        )
        oxy_combobox(
            edit, "@type"
            columns, 10
            editable, true,
            tooltips, "where the letter or other document arrived,where the text was copied,where the person involved was deposed,where the letter or other document was sent from,where the text was written"
            values, "arrived,copied,deposed,sent,written"
        )
    ;
}

/* Hand */
handNote {
    display:block;
    padding:2px;
    border:1px inset;
    visibility:-oxy-collapse-text;
    white-space:pre-wrap;
    content:
        oxy_editor(
            rendererClassName, "info.histei.contextual_info.ContextualEditor"
            swingEditorClassName, "info.histei.contextual_info.ContextualEditor"
            edit, "@scribeRef"
            fontInherit, true
            contextual_type, "psn"
        )
    ;
}

handNote:before {
    padding: 0px;
    vertical-align: middle;
    -oxy-append-content:
        url('../images/hand-16.png')
        oxy_label(
            text, "${i18n(id.label)}: "
            styles, "@import 'labels_sub.css';"            
        )
        oxy_textfield(
            edit, "@xml:id"
            columns, 12
        )
        oxy_label(
            text, "${i18n(scope.label)}: "
            styles, "@import 'labels_sub.css';"            
        )
        oxy_combobox(
                edit, "@scope"
        )
    ;
}

handNote:after {
    display:block;
    content:
        oxy_label(
            text, "${i18n(desc.label)}: "
            styles, "@import 'labels_sub.css';"            
        )
        oxy_textArea(
            edit, "#text"
            contentType, "text/plain"
            columns, 50
            rows, 2
            indentOnTab, false
        )
        "\A"
        oxy_label(
            text, "${i18n(script.label)}: "
            styles, "@import 'labels_sub.css';"
        )
        oxy_combobox(
            edit, "@script"
            editable, true
        )  
    ;
}

/* Revision Description */

revisionDesc:before {
    padding: 0px;
    vertical-align: middle;
    -oxy-append-content:
        oxy_label(
            text, "${i18n(status.label)}: "
            color, white
            width, 75px
            styles, "@import 'labels_sub.css';"            
        )
        oxy_combobox(
                edit, "@status"
        )
}

/* Change (very similar to handNote) */
change {
    display:block;
    padding:2px;
    border:1px inset;
    visibility:-oxy-collapse-text;
    white-space:pre-wrap;
    content:
        oxy_label(
            text, "${i18n(who.label)}: "
            styles, "@import 'labels_sub.css';"            
        )
        oxy_editor(
            rendererClassName, "info.histei.contextual_info.ContextualEditor"
            swingEditorClassName, "info.histei.contextual_info.ContextualEditor"
            edit, "@who"
            fontInherit, true
            contextual_type, "psn"
            contextual_filter, "editor"
        )
    ;
}

change:before {
    -oxy-prepend-content:
        url('../images/change-16.png')
}

change:before {
    padding: 0px;
    vertical-align: middle;
    -oxy-append-content:
        oxy_label(
            text, "${i18n(status.label)}: "
            styles, "@import 'labels_sub.css';"            
        )
        oxy_combobox(
                edit, "@status"
        )
        oxy_label(
            text, "${i18n(when.label)}: "
            styles, "@import 'labels_sub.css';"            
        )
        oxy_datePicker(
            columns, 18
            edit, "@when"
            format, "yyyy-MM-dd'T'HH:mm:ss"
        )
    ;
}

change:after {
    display:block;
    content:
        oxy_label(
            text, "${i18n(desc.label)}: "
            styles, "@import 'labels_sub.css';"            
        )
        oxy_textArea(
            edit, "#text"
            contentType, "text/plain"
            columns, 50
            rows, 2
            indentOnTab, false
        )
    ;
}

/* Editorial Declaration */

correction:before {
    -oxy-append-content: " "
        oxy_label(
            text, oxy_concat("${i18n(status.label)}: ")
            styles, "@import 'labels_sub.css';"
        )
        oxy_combobox(
            edit, "@status"
        )
        " "
        oxy_label(
            text, oxy_concat("${i18n(method.label)}: ")
            styles, "@import 'labels_sub.css';"
        )
        oxy_combobox(
            edit, "@method"
        )
        " "
    ;
}

normalization:before {
    -oxy-append-content: " "
        oxy_label(
            text, oxy_concat("${i18n(method.label)}: ")
            styles, "@import 'labels_sub.css';"
        )
        oxy_combobox(
            edit, "@method"
        )
        " "
        oxy_label(
            text, "${i18n(source.label)}: "
            styles, "@import 'labels_sub.css';"
        )
        oxy_textfield(
            edit, "@source"
            columns, 25
        )
        " "
    ;
}

normalization[source]:after {
    padding-left: 5px;
    vertical-align: middle;
    link: attr(source, string, "");
    content: url('../images/link_open-16.png');
}

quotation:before {
    -oxy-append-content: " "
        oxy_label(
            text, oxy_concat("${i18n(marks.label)}: ")
            styles, "@import 'labels_sub.css';"
        )
        oxy_combobox(
            edit, "@marks"
        )
        " "
    ;
}

hyphenation:before {
    -oxy-append-content: " "
        oxy_label(
            text, oxy_concat("${i18n(eol.label)}: ")
            styles, "@import 'labels_sub.css';"
        )
        oxy_combobox(
            edit, "@eol"
        )
        " "
    ;
}


